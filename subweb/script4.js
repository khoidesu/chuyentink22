// trang con
let likeCount = 0;
let isLiked = false;

function toggleLike() {
    const likeButton = document.getElementById('like-button');
    const likeIcon = document.getElementById('like-icon');
    const likeCountElement = document.getElementById('like-count');

    if (isLiked) {
        // N·∫øu ƒë√£ like, h·ªßy like
        likeCount--;
        likeButton.classList.remove('liked'); // X√≥a class 'liked'
        likeIcon.textContent = 'ü§ç'; // Bi·ªÉu t∆∞·ª£ng tr√°i tim tr·∫Øng
    } else {
        // N·∫øu ch∆∞a like, th√™m like
        likeCount++;
        likeButton.classList.add('liked'); // Th√™m class 'liked'
        likeIcon.textContent = '‚ù§Ô∏è'; // Bi·ªÉu t∆∞·ª£ng tr√°i tim ƒë·ªè
    }

    // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£t like
    likeCountElement.textContent = likeCount;
    isLiked = !isLiked; // ƒê·∫£o tr·∫°ng th√°i like
}

function addComment() {
    const commentInput = document.getElementById('comment-input');
    const commentsSection = document.getElementById('comments-section');

    if (commentInput.value.trim() !== '') {
        const newComment = document.createElement('p');
        newComment.textContent = commentInput.value;
        commentsSection.appendChild(newComment);
        commentInput.value = '';
    }
}

function sharePost() {
    alert('Chia s·∫ª b√†i vi·∫øt th√†nh c√¥ng!');
}

function goBack() {
    window.history.back(); // Quay l·∫°i trang tr∆∞·ªõc ƒë√≥
}

let currentSlide = 0;

function showSlide(index) {
    const carouselInner = document.querySelector('.carousel-inner');
    const totalSlides = document.querySelectorAll('.carousel-item').length;

    if (index >= totalSlides) {
        currentSlide = 0;
    } else if (index < 0) {
        currentSlide = totalSlides - 1;
    } else {
        currentSlide = index;
    }

    const offset = -currentSlide * 100;
    carouselInner.style.transform = `translateX(${offset}%)`;
}

function nextSlide() {
    showSlide(currentSlide + 1);
}

function prevSlide() {
    showSlide(currentSlide - 1);
}

// T·ª± ƒë·ªông chuy·ªÉn slide sau m·ªói 5 gi√¢y (t√πy ch·ªçn)
setInterval(nextSlide, 5000);

let currentLightboxIndex = 0;
const images = document.querySelectorAll('.carousel-item img');

// M·ªü lightbox
function openLightbox(index) {
    const lightbox = document.getElementById('lightbox');
    const lightboxImage = document.getElementById('lightbox-image');

    currentLightboxIndex = index;
    lightboxImage.src = images[index].src;
    lightbox.style.display = 'flex';
}

// ƒê√≥ng lightbox
function closeLightbox() {
    const lightbox = document.getElementById('lightbox');
    lightbox.style.display = 'none';
}

// Chuy·ªÉn ƒë·ªïi h√¨nh ·∫£nh trong lightbox
function changeLightboxImage(direction) {
    currentLightboxIndex += direction;

    if (currentLightboxIndex >= images.length) {
        currentLightboxIndex = 0;
    } else if (currentLightboxIndex < 0) {
        currentLightboxIndex = images.length - 1;
    }

    const lightboxImage = document.getElementById('lightbox-image');
    lightboxImage.src = images[currentLightboxIndex].src;
}

// ƒê√≥ng lightbox khi nh·∫•n ph√≠m Esc
document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape') {
        closeLightbox();
    }
});

function createFallingFlower() {
    const flower = document.createElement("div");
    flower.innerHTML = "üå∏"; // Icon hoa ƒë√†o
    flower.style.position = "fixed";
    flower.style.left = Math.random() * window.innerWidth + "px";
    flower.style.top = "-50px";
    flower.style.fontSize = Math.random() * 20 + 20 + "px";
    flower.style.opacity = Math.random();
    flower.style.zIndex = "1000";
    flower.style.pointerEvents = "none";
    document.body.appendChild(flower);

    let speed = Math.random() * 3 + 2; // T·ªëc ƒë·ªô r∆°i
    let angle = Math.random() * 2 - 1; // G√≥c nghi√™ng
    let rotation = 0; // G√≥c xoay

    function fall() {
        if (parseInt(flower.style.top) > window.innerHeight) {
            flower.remove(); // X√≥a hoa khi r∆°i ra kh·ªèi m√†n h√¨nh
        } else {
            flower.style.top = parseInt(flower.style.top) + speed + "px";
            flower.style.left = parseInt(flower.style.left) + angle + "px";
            rotation += 2; // TƒÉng g√≥c xoay
            flower.style.transform = `rotate(${rotation}deg)`; // Xoay hoa
            requestAnimationFrame(fall); // L·∫∑p l·∫°i hi·ªáu ·ª©ng
        }
    }

    fall();
}

// T·∫°o hoa m·ªõi m·ªói 500ms
setInterval(createFallingFlower, 500);